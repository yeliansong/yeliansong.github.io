<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>K8S-学习笔记 - 分类 - LIANSONG&#39;S Blog</title>
        <link>https://yeliansong.github.io/categories/k8s-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
        <description>K8S-学习笔记 - 分类 - LIANSONG&#39;S Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ylsccnu@hotmail.com (LIANSONG&#39;S Blog)</managingEditor>
            <webMaster>ylsccnu@hotmail.com (LIANSONG&#39;S Blog)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 26 Apr 2020 19:00:00 &#43;0800</lastBuildDate><atom:link href="https://yeliansong.github.io/categories/k8s-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" rel="self" type="application/rss+xml" /><item>
    <title>云技术、容器及K8S 分享</title>
    <link>https://yeliansong.github.io/2020-4-24-sharing/</link>
    <pubDate>Sun, 26 Apr 2020 19:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-4-24-sharing/</guid>
    <description><![CDATA[第一部分： 这部分内容包括云历史、容器技术、k8s等基础知识。 1. 云技术 1.1 云计算的历史 https://skyao.io/learning-cloudnative/introduction/history.html IaaS：基础设施即服务 PaaS：平台即服务 SaaS：软]]></description>
</item><item>
    <title>Secret And ConfigMap</title>
    <link>https://yeliansong.github.io/2020-05-03-secret-and-configmap/</link>
    <pubDate>Wed, 01 Apr 2020 10:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-05-03-secret-and-configmap/</guid>
    <description><![CDATA[1. 背景 到目前为止，也许您不必将任何类型的配置数据传递给应用程序。 因为几乎所有应用程序都需要配置，不应将其融入到构建的应用程序本身中。 本文介绍]]></description>
</item><item>
    <title>K8S部署策略</title>
    <link>https://yeliansong.github.io/2020-4-22-k8s-deployment-strategies/</link>
    <pubDate>Fri, 27 Mar 2020 10:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-4-22-k8s-deployment-strategies/</guid>
    <description><![CDATA[1. 背景 我们总是将最终版本的应用程序部署到生产环境。 有多种方法可以保证发布生产的稳定和安全。 以下部分是 k8s 部署策略。 2. 策略 有 4 种方法可以进行生产]]></description>
</item><item>
    <title>K8S网络</title>
    <link>https://yeliansong.github.io/2020-4-23-k8s-network/</link>
    <pubDate>Fri, 13 Mar 2020 16:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-4-23-k8s-network/</guid>
    <description><![CDATA[K8S网络分为3级。 从内到外，有3种： 1）容器网络。 2) 集群内网络。 3) 外部集群网络。 以下是详细信息， 1.容器网络 Docker 网络仅限于主机本身。 默认情况]]></description>
</item><item>
    <title>健康检查</title>
    <link>https://yeliansong.github.io/2020-4-11-health-check/</link>
    <pubDate>Fri, 28 Feb 2020 09:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-4-11-health-check/</guid>
    <description><![CDATA[1.关于K8S健康检查 健康检查是k8s编排的重要功能。 K8s 可以监控这些容器，并在发生故障时自动重新启动它们。 如果容器的主进程崩溃，k8s将重新]]></description>
</item><item>
    <title>如何编写 YAML</title>
    <link>https://yeliansong.github.io/2020-04-08-how-to-write-the-yaml/</link>
    <pubDate>Sat, 15 Feb 2020 10:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-04-08-how-to-write-the-yaml/</guid>
    <description><![CDATA[1.如何编写YAML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deploymnet spec: replicas: 3 selector: matchLabels: app: web_server template: metadata: labels: app: web_server spec: containers: - name: nginx image: nginx:1.7.9 好的，让我们分析一下这个 YAML 示例。 它]]></description>
</item><item>
    <title>K8S部署</title>
    <link>https://yeliansong.github.io/2020-4-25-deployment/</link>
    <pubDate>Tue, 04 Feb 2020 10:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-4-25-deployment/</guid>
    <description><![CDATA[Deployment 为 Pod 和 ReplicaSet 提供声明性更新。 我们可以利用许多部署功能。 本章涵盖更新部署、回滚部署、调用部署、暂停和恢复部署和部署状态。 首先，我们创建一个部署。]]></description>
</item><item>
    <title>Volume</title>
    <link>https://yeliansong.github.io/2020-4-14-volume/</link>
    <pubDate>Sat, 25 Jan 2020 09:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-4-14-volume/</guid>
    <description><![CDATA[1.emptyDir 这是卷的基础。 生命周期取决于Pod。 当相关 Pod 被删除时，该卷也会被删除。 所以我们可以将其视为Pod的路径。 Pod 的所有容器共享这个 voiume。]]></description>
</item><item>
    <title>了解K8S架构</title>
    <link>https://yeliansong.github.io/2020-3-22-understand-the-k8s-architecture/</link>
    <pubDate>Sat, 04 Jan 2020 09:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2020-3-22-understand-the-k8s-architecture/</guid>
    <description><![CDATA[1.k8s组件架构。 好吧，这很容易理解。 如上所述，主节点是最重要的。 它控制其他节点加入集群。 API服务器也暴露在外。 通过主节点，即可安排其他]]></description>
</item><item>
    <title>九、Deployment声明式升级应用</title>
    <link>https://yeliansong.github.io/2019-09-16-9-deployment%E5%A3%B0%E6%98%8E%E5%BC%8F%E5%8D%87%E7%BA%A7%E5%BA%94%E7%94%A8/</link>
    <pubDate>Fri, 01 Nov 2019 15:11:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://yeliansong.github.io/2019-09-16-9-deployment%E5%A3%B0%E6%98%8E%E5%BC%8F%E5%8D%87%E7%BA%A7%E5%BA%94%E7%94%A8/</guid>
    <description><![CDATA[1. 升级的几种方式 先来看一个案例，这种情况怎么处理： POD现在用的是V1版本，现在有一个V2版本，怎么把V2版本替换到V1版本？有三种方式： 删]]></description>
</item></channel>
</rss>
